plugins {
    id 'idea'
    id 'org.springframework.boot' version '3.3.4'
    id 'java'
    id "com.google.protobuf" version "0.8.14"
    id 'com.google.cloud.tools.jib' version '2.5.0'
    id 'com.diffplug.spotless' version '6.25.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'io.treactor'
version = '0.1-SNAPSHOT'
sourceCompatibility = '17'

def otelapi = '1.42.1'
def otelsdk = '1.42.1'
def otelagent = '2.8.0'

repositories {
    mavenCentral()
}

configurations {
    all*.exclude group: 'ch.qos.logback'
    all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    all*.exclude group: 'org.slf4j', module: 'jul-to-slf4j'
    agent
}

dependencies {
    implementation "io.grpc:grpc-protobuf:1.68.0"
    implementation "io.grpc:grpc-stub:1.68.0"
    runtimeOnly 'com.google.protobuf:protobuf-java:4.28.2'
    runtimeOnly "com.google.protobuf:protobuf-java-util:3.14.0"
    implementation "io.opentelemetry:opentelemetry-api:$otelapi"
    implementation "io.opentelemetry:opentelemetry-sdk:$otelsdk"

    implementation "io.opentelemetry:opentelemetry-exporter-otlp:$otelsdk"
    implementation "io.opentelemetry:opentelemetry-exporter-prometheus:1.0.0-alpha"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-zpages:1.0.0-alpha"
    agent "io.opentelemetry.javaagent:opentelemetry-javaagent:$otelagent"

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.24.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.24.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.24.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.24.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.24.1'

    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.2')
    implementation "io.grpc:grpc-netty-shaded:1.32.1"

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

task webpack(type: Exec) {
//	inputs.file("package-lock.json")
//	inputs.dir("app")
    commandLine "$projectDir/node_modules/.bin/webpack", "app/index.js", "$buildDir/js/bundle.js"
//	outputs.dir("$buildDir/js")
//	outputs.dir("$projectDir/src/main/resources/static")
}

task webpack2(type: Copy) {
    from "$buildDir/js"
    into "$projectDir/src/main/resources/static/js"
}

task copyAgentJar(type: Copy) {
    from configurations.agent
    into "src/main/jib/app"
    rename { fileName -> "opentelemetry-javaagent.jar" }
}

jib {
    to {
        image = 'gcr.io/treactor/treactor-java'
        credHelper = 'osxkeychain'
        tags = ['0.1.5']
    }
    container {
        jvmFlags = ['-javaagent:/app/opentelemetry-javaagent.jar',
                    '-Xms512m',
                    '-Xdebug']
        mainClass = 'io.treactor.springboot.Application'
        ports = ['3330']
        format = 'OCI'
    }
}
tasks.jib.dependsOn(copyAgentJar)

spotless {
    java {
        removeUnusedImports()
        googleJavaFormat()
    }
}
